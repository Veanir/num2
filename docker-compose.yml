services:
  frontend:
    build:
      context: ./emoji-predictor-web
      dockerfile: Dockerfile
    ports:
      # Coolify will map host port 80/443 to container port 3000
      - "3000"
    environment:
      # These will be used by the Next.js app at runtime inside the container
      # Coolify automatically makes services available via their name,
      # so the frontend can reach the backend at http://backend:8000
      NEXT_PUBLIC_API_URL: http://backend:8000
      # For WebSockets, use ws://backend:8000
      NEXT_PUBLIC_WS_URL: ws://backend:8000
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: ./emoji-predictor-api
      dockerfile: Dockerfile
    environment:
      # URL from where the application will download the model file on startup
      # Set this value in Coolify Secrets for the backend service
      MODEL_URL: ${MODEL_URL} # Coolify will inject the secret value here
    # No explicit ports needed here if only accessed by frontend service
    # Coolify handles inter-service communication
    # If you needed direct external access to the API (e.g., for debugging),
    # you could expose port 8000 here similarly to the frontend.
    # volumes:
    #   - ./emoji-predictor-api/emoji_model.ckpt:/app/emoji_model.ckpt 
    restart: unless-stopped